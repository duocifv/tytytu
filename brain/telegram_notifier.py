import asyncio
from services.telegram_service import send_telegram


def notify(message: str):
    """
    G·ª≠i th√¥ng b√°o Telegram an to√†n cho c·∫£ async v√† sync context.
    - N·∫øu ƒë√£ c√≥ event loop ‚Üí d√πng run_coroutine_threadsafe
    - N·∫øu ch∆∞a c√≥ ‚Üí d√πng asyncio.run()
    """
    try:
        try:
            loop = asyncio.get_running_loop()
        except RuntimeError:
            loop = None

        if loop and loop.is_running():
            future = asyncio.run_coroutine_threadsafe(send_telegram(message), loop)
            return future.result()
        else:
            return asyncio.run(send_telegram(message))
    except Exception as e:
        # Kh√¥ng l√†m crash workflow ch√≠nh n·∫øu g·ª≠i Telegram th·∫•t b·∫°i
        print(f"‚ö†Ô∏è Telegram notify failed: {e}")


def notify_node_status(node_name: str, status: str):
    notify(f"üìå Node *{node_name}* ‚Üí {status}")


def notify_blog_published(title: str):
    notify(f"‚úÖ Blog ƒë√£ publish: {title}")
